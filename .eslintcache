[{"C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\index.js":"1","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\App.js":"2","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\ItemsList.js":"3","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\context\\GlobalState.js":"4","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\context\\AppReducer.js":"5","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\Cart.js":"6","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\Header.js":"7","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\Item.js":"8"},{"size":197,"mtime":1607425365386,"results":"9","hashOfConfig":"10"},{"size":644,"mtime":1607599715864,"results":"11","hashOfConfig":"10"},{"size":813,"mtime":1607594353462,"results":"12","hashOfConfig":"10"},{"size":768,"mtime":1607763003818,"results":"13","hashOfConfig":"10"},{"size":527,"mtime":1607763547039,"results":"14","hashOfConfig":"10"},{"size":3702,"mtime":1607769447191,"results":"15","hashOfConfig":"10"},{"size":967,"mtime":1607771301081,"results":"16","hashOfConfig":"10"},{"size":1588,"mtime":1607599049493,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1fhsams",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\index.js",[],["40","41"],"C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\App.js",["42","43"],"import React, { useState, useContext } from 'react';\nimport {BrowserRouter as Router, Switch, Route} from  'react-router-dom';\nimport ItemsList from './components/ItemsList';\nimport {GlobalProvider} from './context/GlobalState';\nimport Cart from './components/Cart';\nimport Header from './components/Header';\n\nfunction App() {     \n  return (\n   <GlobalProvider>\n     <Router>\n       <Header/>\n\n       <Switch>\n          <Route exact path=\"/\">\n            <ItemsList />\n          </Route>\n          <Route path =\"/cart\">\n            <Cart/>\n          </Route>\n       </Switch>\n     </Router>\n    </GlobalProvider>\n   \n  );\n}\nexport default App;","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\ItemsList.js",["44","45"],"import React, {useState,useEffect, useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\nimport Item from './Item';\r\n\r\nconst ItemsList = ({item}) => {\r\n    const [items, setItems] = useState([]);\r\n    \r\n    useEffect(() => {    \r\n      fetch(`https://fakestoreapi.com/products`).then(res=>res.json()).then((data) => {\r\n      \r\n      if (!data.errors) {\r\n        setItems(data)\r\n      }else{\r\n        setItems([]);\r\n      }\r\n    })\r\n    }, [])\r\n\r\n    \r\n  const {addToCart, cart} = useContext(GlobalContext);\r\n    \r\n    return (\r\n        <div className=\"App\">\r\n        <ul className=\"w-full px-8\">\r\n        {\r\n            \r\n           items.map(item=>( <Item key={item.id} item={item}  />))\r\n\r\n          } \r\n        </ul>  \r\n      </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ItemsList\r\n","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\context\\GlobalState.js",[],"C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\context\\AppReducer.js",["46"]," export default (state, action)=>{\r\n    switch (action.type) {\r\n        case \"ADD_TO_CART\":\r\n        return {\r\n            ...state,\r\n            cart:[action.payload, ...state.cart],\r\n        };\r\n        case \"REMOVE_FROM_CART\":\r\n            return {\r\n                ...state,\r\n                cart:state.cart.filter(item => item.id !== action.payload),\r\n            };\r\n            case \"CLEAR_CART\":\r\n                return {cart: [],\r\n                }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n} ","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\Cart.js",["47"],"import React ,{useContext, useState} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nconst Cart = () => {\r\n    const [options, setOptions] = useState();\r\n\r\n    const {cart, removeItem, clearCart} = useContext(GlobalContext);\r\n    const itemCount = cart.length > 1? ' items': ' item'\r\n    return (\r\n        <div className=\"relative px-20 \">\r\n            <div className=\"relative block float-right mb-4\">\r\n                <span>{cart.length}{itemCount} in cart  </span>\r\n                <button type=\"button\" className=\"bg-gray-400 px-4 py-2\" onClick={()=>{clearCart()}}>Clear</button>\r\n            </div>\r\n            <div className=\"clear-float\"></div>\r\n            <table className=\"min-w-full table-auto\">\r\n              <thead className=\"justify-between\">\r\n                  <tr className=\"bg-gray-800 text-gray-300\">\r\n                      <th className=\"px-16 py-2 text-left\">Item</th>\r\n                      <th className=\"px-16 py-2\">Quantity</th>\r\n                      <th className=\"px-16 py-2\">Unit Price</th>\r\n                      <th className=\"px-16 py-2\">Subtotal</th>\r\n                      <th className=\"px-16 py-2\">Action</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody class=\"bg-gray-200\">\r\n                  {cart.length > 0?\r\n                cart.map(cartItem =>(\r\n                  <tr key={cartItem.id} class=\"bg-white border-4 border-gray-200 \">\r\n                      <td className=\"py-8 h-full\">\r\n                          <span className=\"h-full inline-block\">\r\n                              <img className=\"h-52 w-auto\" src={cartItem.image}/>\r\n                          </span>\r\n                          {(<span>{cartItem.title}</span>)\r\n                          /* ()=>{ const itemTitle = cartItem.title\r\n                          console.log('itemTitle');\r\n                          if (itemTitle.length > 100) {\r\n                              return (<span>{cartItem.title.substring(0, 100) + \" ...\"}</span>)\r\n                          } else {\r\n                              return (<span>{cartItem.title}</span>)\r\n                          }} */}\r\n                      </td>\r\n                      <td className=\"text-center py-8\">\r\n                      {/* <input type=\"number\" value={options} onChange={(e)=>setOptions(e.target.value)}/> */}\r\n                       <select value={options} onChange={(e)=>setOptions(e.target.value)}>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"6\">6</option>\r\n                        <option value=\"7\">7</option>\r\n                        <option value=\"8\">8</option>\r\n                        <option value=\"9\">9</option>\r\n                        <option value=\"10\">10</option>\r\n                      </select> \r\n                      </td>\r\n                      <td className=\"text-center py-8\">{cartItem.price}</td>\r\n                        <td className=\"text-center py-8\">{options * cartItem.price}</td>\r\n                        <td className=\"text-center\"><button type=\"button\" className=\"bg-gray-200 px-4 py-2 hover:bg-gray-300\" onClick={()=>removeItem(cartItem.id)}><span className=\"fa fa-trash\"></span> Remove</button></td>\r\n                  </tr>\r\n            )):(<tr><td colSpan={5}><h1 className=\"bg-white text-xl text-gray-500 font-semibold text-center pt-8\"> No items in cart!</h1></td></tr>)}\r\n              </tbody>\r\n            </table>\r\n\r\n     \r\n        </div>\r\n    )\r\n}\r\nexport default Cart;","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\Header.js",["48"],"C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\Item.js",["49"],"import React, {useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nconst Item = ({item}) => {\r\n\r\n    const {addToCart, cart} = useContext(GlobalContext);    \r\n    const addedToCart = cart.find(i =>i.id === item.id);\r\n    const disableButton = addedToCart? true:false\r\n    const disableButtonStyle = addedToCart? {opacity:\"0.3\", color:\"red\", cursor:\"not-allowed\", fontFamily: \"Arial\"}: {};\r\n    //const disabledStyle = disableButton? : '';\r\n    const shortDesc = item.description.substring(0, 100) + \" ...\"; \r\n    return (\r\n                <li className=\"inline-block w-1/5 px-4 my-6 h-52 \">\r\n                    <span className=\"block h-2/3\">\r\n                        <img src={item.image} alt={item.title} className=\"h-full w-full\"/>\r\n                    </span>\r\n                    <span className=\"block h-1/3\">\r\n                        <h4 className=\"text-lg text-gray-700\">{item.title}</h4>\r\n                        <span className=\"block text-gray-600\">{shortDesc}</span>\r\n\r\n                        <span className=\"px-4 inline-block flex justify-between\">\r\n                            <span className=\"inline-block text-xl font-bold\">${item.price}</span>\r\n                            <button disabled={disableButton}  style={disableButtonStyle} onClick={() =>addToCart(item)} className=\"disabled:opacity-50 py-2 px-3 bg-green-400 inline-block rounded-md focus:outline-none focus:border-none\" type=\"button\">Add to cart</button>\r\n                        </span>\r\n                    </span> \r\n                </li>\r\n    )\r\n}\r\n\r\nexport default Item;\r\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"58","line":1,"column":27,"nodeType":"56","messageId":"57","endLine":1,"endColumn":37},{"ruleId":"54","severity":1,"message":"59","line":20,"column":10,"nodeType":"56","messageId":"57","endLine":20,"endColumn":19},{"ruleId":"54","severity":1,"message":"60","line":20,"column":21,"nodeType":"56","messageId":"57","endLine":20,"endColumn":25},{"ruleId":"61","severity":1,"message":"62","line":1,"column":2,"nodeType":"63","endLine":20,"endColumn":2},{"ruleId":"64","severity":1,"message":"65","line":32,"column":31,"nodeType":"66","endLine":32,"endColumn":82},{"ruleId":"54","severity":1,"message":"67","line":2,"column":9,"nodeType":"56","messageId":"57","endLine":2,"endColumn":15},{"ruleId":"54","severity":1,"message":"68","line":8,"column":11,"nodeType":"56","messageId":"57","endLine":8,"endColumn":24},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'addToCart' is assigned a value but never used.","'cart' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'router' is defined but never used.","'disableButton' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]