[{"C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\index.js":"1","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\App.js":"2","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\ItemsList.js":"3","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\context\\GlobalState.js":"4","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\context\\AppReducer.js":"5","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\Cart.js":"6","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\Header.js":"7","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\Item.js":"8","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\Category.js":"9"},{"size":197,"mtime":1607425365386,"results":"10","hashOfConfig":"11"},{"size":780,"mtime":1607887010493,"results":"12","hashOfConfig":"11"},{"size":1031,"mtime":1607983431188,"results":"13","hashOfConfig":"11"},{"size":768,"mtime":1607763003818,"results":"14","hashOfConfig":"11"},{"size":527,"mtime":1607763547039,"results":"15","hashOfConfig":"11"},{"size":5169,"mtime":1607804248250,"results":"16","hashOfConfig":"11"},{"size":967,"mtime":1607771301081,"results":"17","hashOfConfig":"11"},{"size":1675,"mtime":1607773201918,"results":"18","hashOfConfig":"11"},{"size":951,"mtime":1607984653929,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1fhsams",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\index.js",[],["42","43"],"C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\App.js",["44","45"],"C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\ItemsList.js",["46","47"],"C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\context\\GlobalState.js",[],"C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\context\\AppReducer.js",["48"]," export default (state, action)=>{\r\n    switch (action.type) {\r\n        case \"ADD_TO_CART\":\r\n        return {\r\n            ...state,\r\n            cart:[action.payload, ...state.cart],\r\n        };\r\n        case \"REMOVE_FROM_CART\":\r\n            return {\r\n                ...state,\r\n                cart:state.cart.filter(item => item.id !== action.payload),\r\n            };\r\n            case \"CLEAR_CART\":\r\n                return {cart: [],\r\n                }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n} ","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\Cart.js",["49"],"import React ,{useContext, useState} from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nconst Cart = () => {\r\n    const [options, setOptions] = useState();\r\n\r\n    const {cart, removeItem, clearCart} = useContext(GlobalContext);\r\n    const itemCount = cart.length > 1? ' items': ' item';\r\n    const total = cart.reduce((acc, curr) => acc + curr.price * options, 0);\r\n    const handleToken = (token, address)=>{\r\n        console.log(token, address)\r\n    }\r\n    return (\r\n        <div style={{fontFamily: \"'Montserrat', 'sans-serif'\"}} className=\"relative px-20 \">\r\n            <div className=\"relative block float-right mb-4\">\r\n                <span className=\"font-bold\">{cart.length}{itemCount} in cart  </span>\r\n                <button type=\"button\" className=\"bg-gray-400 px-4 py-2\" onClick={()=>{clearCart()}}>X Clear</button>\r\n            </div>\r\n            <div className=\"clear-float\"></div>\r\n            <table className=\"min-w-full table-auto mb-20\">\r\n              <thead className=\"justify-between\">\r\n                  <tr className=\"bg-gray-800 text-gray-300\">\r\n                      <th className=\"px-16 py-4 text-left\">Item</th>\r\n                      <th className=\"px-12 py-4\">Quantity</th>\r\n                      <th className=\"px-12 py-4 whitespace-nowrap\">Unit Price</th>\r\n                      <th className=\"px-12 py-4\">Subtotal</th>\r\n                      <th className=\"px-12 py-4\">Action</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody class=\"bg-gray-200\">\r\n                  {cart.length > 0?\r\n                cart.map(cartItem =>(\r\n                  <tr key={cartItem.id} class=\"bg-white border-4 border-gray-200 \">\r\n                      <td className=\"py-8 h-full inline-block grid grid-cols-2 gap-0\">\r\n                          <span className=\"w-full text-center\">\r\n                              <img className=\"h-48 w-auto text-center \" src={cartItem.image}/>\r\n                          </span>\r\n                           <span className=\"w-full text-left\">\r\n                           {(<span className=\"block text-base text-left font-semibold\">{cartItem.title}</span>)\r\n                          /* ()=>{ const itemTitle = cartItem.title\r\n                          console.log('itemTitle');\r\n                          if (itemTitle.length > 100) {\r\n                              return (<span>{cartItem.title.substring(0, 100) + \" ...\"}</span>)\r\n                          } else {\r\n                              return (<span>{cartItem.title}</span>)\r\n                          }} */}\r\n                          <span className=\"text-sm text-left\">{cartItem.description}</span>\r\n                          </span> \r\n                      </td>\r\n                      <td className=\"text-center py-8\">\r\n                      {/* <input type=\"number\" value={options} onChange={(e)=>setOptions(e.target.value)}/> */}\r\n                       <select value={options} onChange={(e)=>setOptions(e.target.value)}>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"6\">6</option>\r\n                        <option value=\"7\">7</option>\r\n                        <option value=\"8\">8</option>\r\n                        <option value=\"9\">9</option>\r\n                        <option value=\"10\">10</option>\r\n                      </select> \r\n                      </td>\r\n                      <td className=\"text-center py-8\">{cartItem.price}</td>\r\n                        <td className=\"text-center py-8\">{options * cartItem.price}</td>\r\n                        \r\n                        <td className=\"text-center\"><button type=\"button\" className=\"bg-gray-200 px-4 py-2 hover:bg-gray-300\" onClick={()=>removeItem(cartItem.id)}><span className=\"fa fa-trash\"></span> Remove</button></td>\r\n                  </tr>\r\n\r\n            )):(<tr><td colSpan={5}><h1 className=\"bg-white text-xl text-gray-500 font-semibold text-center pt-8\"> No items in cart!</h1></td></tr>)}\r\n                 <tr >\r\n                        <td colSpan={5} className=\"bg-white  py-4 text-right\">\r\n                        <span className=\"inline-block px-2 text-xl font-extrabold\">$ {total.toFixed(2)}</span>\r\n                        <span className=\"ml-6 inline-block  bg-green-400 hover:bg-green-300 font-semibold\">\r\n                            <StripeCheckout\r\n                            stripeKey=\"pk_test_51HxbytCWocYv6ExIojeDJPWY6m3zv7TD3kkVz4HySn3I7iLrA4zIxm5J5w39CQMmCEbuFr0ZJ23Lg9fLoG6dfVQf00HMeKbXE8\"\r\n                            name={cart.title}\r\n                            amount={total * 100}\r\n                            token={handleToken}\r\n                            />\r\n                    </span>\r\n\r\n                        </td>\r\n                        \r\n                 </tr>              \r\n              </tbody>\r\n            </table>\r\n\r\n\r\n     \r\n        </div>\r\n    )\r\n}\r\nexport default Cart;","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\Header.js",["50"],"import React, { useContext } from 'react'\r\nimport {router} from 'react-router-dom';\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nconst Header = () => {\r\n    const {cart} = useContext(GlobalContext)\r\n    return (\r\n        <div className=\"relative mb-16\">\r\n        <header className=\"fixed top-0 z-10 px-20 bg-gray-700 w-full \">\r\n            <ul className=\" flex justify-between py-3 text-gray-200\">\r\n                <li style={{fontFamily: 'Croissant One'}}>\r\n                    <Link to=\"/\"><h1 className=\"font-bold text-2xl\">U-Mall</h1></Link>\r\n                </li>\r\n                <li className=\" text-3xl\">\r\n    <Link to=\"/cart\"><span className=\"fa fa-shopping-cart relative\"><sup className=\"text-sm bg-black text-white px-2 py rounded-full  absolute -right-3\">{cart.length}</sup></span></Link>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n        </div>\r\n    )\r\n}\r\nexport default Header;\r\n","C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\Item.js",[],"C:\\Users\\simbiat\\Documents\\WWW\\react-cart-checkout-system\\src\\components\\Category.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"55","severity":1,"message":"59","line":1,"column":27,"nodeType":"57","messageId":"58","endLine":1,"endColumn":37},{"ruleId":"55","severity":1,"message":"59","line":1,"column":36,"nodeType":"57","messageId":"58","endLine":1,"endColumn":46},{"ruleId":"55","severity":1,"message":"60","line":2,"column":9,"nodeType":"57","messageId":"58","endLine":2,"endColumn":22},{"ruleId":"61","severity":1,"message":"62","line":1,"column":2,"nodeType":"63","endLine":20,"endColumn":2},{"ruleId":"64","severity":1,"message":"65","line":37,"column":31,"nodeType":"66","endLine":37,"endColumn":95},{"ruleId":"55","severity":1,"message":"67","line":2,"column":9,"nodeType":"57","messageId":"58","endLine":2,"endColumn":15},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'GlobalContext' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'router' is defined but never used.","no-global-assign","no-unsafe-negation"]